{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/DeleteModal.js\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DeleteModal(props) {\n  const handleSubmit = async movieData => {\n    movieData.preventDefault();\n    const serverUrl = `https://onlineserver-w9zu.onrender.com/getMovies/${props.movieData.id}`;\n    const data = {\n      id: movieData.target.id.value,\n      title: movieData.target.title.value,\n      release_date: movieData.target.release_date.value,\n      poster_path: movieData.target.poster_path.value,\n      overview: movieData.target.overview.value\n    };\n    console.log(\"sssssss\");\n    const axiosRes = await axios.delete(serverUrl, data);\n    props.handleClose();\n    props.takeNewArrFromChild(axiosRes.data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.showFlag,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: props.movieData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: `https://image.tmdb.org/t/p/original${props.movieData.poster_path}`,\n          rounded: true,\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Add it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_c = DeleteModal;\nexport default DeleteModal;\nvar _c;\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"names":["Button","Modal","Col","Form","InputGroup","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DeleteModal","props","handleSubmit","movieData","preventDefault","serverUrl","id","data","target","value","title","release_date","poster_path","overview","console","log","axiosRes","delete","handleClose","takeNewArrFromChild","children","show","showFlag","onHide","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Image","src","rounded","width","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/DeleteModal.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport axios from 'axios';\n\nfunction DeleteModal(props){\n    \n    const handleSubmit = async (movieData) => {\n        movieData.preventDefault();\n    \n\n            const serverUrl = `https://onlineserver-w9zu.onrender.com/getMovies/${props.movieData.id}`;\n            const data = {\n                id: movieData.target.id.value,\n                title: movieData.target.title.value,\n                release_date: movieData.target.release_date.value,\n                poster_path: movieData.target.poster_path.value,\n                overview:movieData.target.overview.value\n\n            };\n            console.log(\"sssssss\");\n            const axiosRes = await axios.delete(serverUrl, data);\n\n\n            props.handleClose();\n            props.takeNewArrFromChild(axiosRes.data);\n\n            \n        \n    };\n\n    return(\n        <>\n\n<Modal show={props.showFlag} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.movieData.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Image src={`https://image.tmdb.org/t/p/original${props.movieData.poster_path}`} rounded width='100%' />\n                    {/* <div>\n                        <label htmlFor='op'> Write Your Opinion </label>\n                        <br></br>\n                        <input placeholder='write opinion' type=\"text\" value={Opinion} size='50' onChange={(event) => setOpinion(event.target.value)} />\n                    </div> */}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSubmit }>\n                        Add it\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        \n       {/*  <Modal show={props.showFlag} onHide={props.handleclose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Form</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group>\n                            <Form.Label>Movie ID</Form.Label>\n                            <Form.Control\n                                name=\"id\"\n                                type=\"text\"\n                                defaultValue={props.movieData.id}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Movie Title</Form.Label>\n                            <Form.Control\n                                name=\"title\"\n                                type=\"text\"\n                                defaultValue={props.movieData.title}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Movie Date</Form.Label>\n                            <InputGroup hasValidation>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"release_date\"\n                                    defaultValue={props.movieData.release_date}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Movie Image</Form.Label>\n                            <InputGroup hasValidation>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"poster_path\"\n                                    defaultValue={props.movieData.poster_path}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Movie overview</Form.Label>\n                            <InputGroup hasValidation>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"overview\"\n                                    defaultValue={props.movieData.overview}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        <Button type=\"submit\">Submit form</Button>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.handleclose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal> */}\n        \n        \n        </>\n    )\n    \n}\nexport default DeleteModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
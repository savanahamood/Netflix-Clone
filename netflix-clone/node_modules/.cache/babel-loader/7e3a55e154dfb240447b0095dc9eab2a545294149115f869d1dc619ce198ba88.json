{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/ModalMovie.js\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport MovieList from './MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalMovie(props) {\n  _s();\n  const {\n    showFlag,\n    handleClose,\n    movieData\n  } = props;\n  const [Opinion, setOpinion] = useState('');\n  const handleSubmit = async () => {\n    try {\n      const serverUrl = `${process.env.REACT_APP_SERVER_URL}/getMovies`;\n      const data = {\n        id: movieData.id,\n        title: movieData.title,\n        release_date: movieData.release_date,\n        poster_path: movieData.poster_path,\n        overview: movieData.overview\n        // Opinion:Opinion\n      };\n\n      console.log(\"sssssss\");\n      axios.post(serverUrl, data).then(res => {\n        console.log(res);\n      });\n      props.handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: showFlag,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: props.movieData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: `https://image.tmdb.org/t/p/original${props.movieData.poster_path}`,\n          rounded: true,\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Add it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"        \"]\n  }, void 0, true);\n}\n_s(ModalMovie, \"60pjSpWK1i7jcPd9HMxSV/rc2HY=\");\n_c = ModalMovie;\nexport default ModalMovie;\nvar _c;\n$RefreshReg$(_c, \"ModalMovie\");","map":{"version":3,"names":["Button","Modal","Image","React","useState","axios","MovieList","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalMovie","props","_s","showFlag","handleClose","movieData","Opinion","setOpinion","handleSubmit","serverUrl","process","env","REACT_APP_SERVER_URL","data","id","title","release_date","poster_path","overview","console","log","post","then","res","error","children","show","onHide","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","src","rounded","width","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/ModalMovie.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport MovieList from './MovieList';\n\n\nfunction ModalMovie(props) {\n     const { showFlag, handleClose, movieData } = props;\n    const [Opinion, setOpinion] = useState('');\n    const handleSubmit = async () => {\n        try {\n\n            const serverUrl = `${process.env.REACT_APP_SERVER_URL}/getMovies`;\n            const data = {\n                id: movieData.id,\n                title: movieData.title,\n                release_date: movieData.release_date,\n                poster_path: movieData.poster_path,\n                overview:movieData.overview\n               // Opinion:Opinion\n\n            };\n            console.log(\"sssssss\");\n            axios.post(serverUrl, data).then((res)=>{\nconsole.log(res);\n            });\n\n            props.handleClose();\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n \n    return (\n        <>\n            <Modal show={showFlag} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.movieData.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Image src={`https://image.tmdb.org/t/p/original${props.movieData.poster_path}`} rounded width='100%' />\n                    {/* <div>\n                        <label htmlFor='op'> Write Your Opinion </label>\n                        <br></br>\n                        <input placeholder='write opinion' type=\"text\" value={Opinion} size='50' onChange={(event) => setOpinion(event.target.value)} />\n                    </div> */}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSubmit }>\n                        Add it\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n{/*             <MovieList handleClose={handleClose} handleSubmit={handleSubmit} />\n */}        </>\n    )\n\n}\n\nexport default ModalMovie;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
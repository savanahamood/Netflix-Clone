{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/MovieList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ModalM from \"./modalM\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieList(props) {\n  _s();\n  const [movList, setmoList] = useState([]);\n  const [clickedMovie, setClickedMovie] = useState({});\n  const [show, setShow] = useState(false);\n  /* const sendReq = async () => {\n      const serverUrl = `${process.env.REACT_APP_SERVER_URL}/trending`;\n      \n      const result = await axios.get(serverUrl);\n      console.log(result.data);\n      setmoList(result.data);\n   } */\n\n  /* const handleSubmit = async (movieData) => {\n    /*   movieData.preventDefault(); */\n\n  /*     const serverUrl = `${process.env.REACT_APP_SERVER_URL}/getMovies`;\n      const data = {\n          id: movieData.id,\n          title: movieData.title,\n          release_date: movieData.release_date,\n          poster_path: movieData.poster_path,\n          overview:movieData.overview\n      };\n      console.log(data);\n      const axiosRes = await axios.post(serverUrl, data);\n  console.log(axiosRes)\n       }; */\n  const handleShow = item => {\n    setShow(true);\n    setClickedMovie(item);\n  };\n  const handleClose = () => {\n    setShow(false);\n  };\n  useEffect(() => {\n    sendReq();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: movList.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://image.tmdb.org/t/p/original${item.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => {\n                handleShow(item);\n              },\n              children: \"Add to Favarites List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalM, {\n      showFlag: show,\n      handleClose: handleClose,\n      movieData: clickedMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MovieList, \"wGuMZ5V49dTRmu1Owk6Of0p8fmU=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useEffect","useState","axios","Card","Col","Row","Button","ModalM","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","props","_s","movList","setmoList","clickedMovie","setClickedMovie","show","setShow","handleShow","item","handleClose","sendReq","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","className","map","idx","Img","variant","src","poster_path","Body","Title","title","Text","release_date","overview","onClick","showFlag","movieData","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/MovieList.js"],"sourcesContent":["import {useEffect,useState} from \"react\";\nimport axios from \"axios\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ModalM from \"./modalM\";\n\nfunction MovieList(props){\n    const [movList, setmoList] = useState([]);\n    const [clickedMovie,setClickedMovie]=useState({});\n    const [show, setShow] = useState(false);\n    /* const sendReq = async () => {\n        const serverUrl = `${process.env.REACT_APP_SERVER_URL}/trending`;\n        \n        const result = await axios.get(serverUrl);\n        console.log(result.data);\n        setmoList(result.data);\n\n    } */\n    \n    /* const handleSubmit = async (movieData) => {\n      /*   movieData.preventDefault(); */\n    \n\n        /*     const serverUrl = `${process.env.REACT_APP_SERVER_URL}/getMovies`;\n            const data = {\n                id: movieData.id,\n                title: movieData.title,\n                release_date: movieData.release_date,\n                poster_path: movieData.poster_path,\n                overview:movieData.overview\n            };\n            console.log(data);\n            const axiosRes = await axios.post(serverUrl, data);\nconsole.log(axiosRes)\n\n            }; */ \n            const handleShow = (item) => {\n        \n                setShow(true);\n                setClickedMovie(item);\n            }\n            const handleClose=()=>{\n                setShow(false);\n            }\n            \n            \n    \n    useEffect(() => {\n        sendReq();\n    },[]);\n    return(\n    <>\n    <h1>Home</h1>\n            {/* <button onClick={sendReq} >send req</button> */}\n            <Row xs={1} md={4} className=\"g-4\">\n                {movList.map((item, idx) => (\n                    <Col key={idx}>\n                        <Card>\n                            <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/original${item.poster_path}`} />\n                            <Card.Body>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Text>\n                                    <p>{item.release_date}</p>\n                                    <p>{item.overview}</p>\n                                </Card.Text>\n                                <Button variant=\"primary\" onClick={()=>{handleShow(item)}}>Add to Favarites List</Button>\n                               {/*  <Button variant=\"success\" onClick={() => { props.handleupdate(item) }}>Update</Button>\n                                <Button variant=\"danger\" onClick={() => { props.hadleDelete(item) }}>Delete</Button> */}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n            <ModalM showFlag={show} handleClose={handleClose} movieData={clickedMovie}/>\n    </>\n    )\n}\nexport default MovieList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
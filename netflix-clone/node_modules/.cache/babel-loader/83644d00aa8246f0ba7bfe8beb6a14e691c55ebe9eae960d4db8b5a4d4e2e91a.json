{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/Movie.js\",\n  _s = $RefreshSig$();\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from \"react-bootstrap/Button\";\nimport ModalMovie from './ModalMovie';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Movie(props) {\n  _s();\n  const [show, setShow] = useState(false);\n  const handleShow = () => {\n    setShow(true);\n  };\n  const handleClose = () => {\n    setShow(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: props.mData.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: item.poster_path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleShow,\n              children: \"Add to Favorites List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalMovie, {\n      showFlag: show,\n      handleClose: handleClose,\n      movieData: clicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Movie, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["Card","Col","Row","Button","ModalMovie","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Movie","props","_s","show","setShow","handleShow","handleClose","children","xs","md","className","mData","map","item","idx","Img","variant","src","poster_path","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","title","Text","release_date","overview","onClick","showFlag","movieData","clicked","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/Movie.js"],"sourcesContent":["import Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from \"react-bootstrap/Button\";\nimport ModalMovie from './ModalMovie';\n\nimport { useState } from 'react';\nfunction Movie(props) {\n    const [show, setShow] = useState(false);\n    const handleShow = () => {\n        setShow(true);\n    }\n    const handleClose=()=>{\n        setShow(false);\n    }\n    return (\n        <>\n            <Row xs={1} md={4} className=\"g-4\">\n                {props.mData.map((item, idx) => (\n                    <Col key={idx}>\n                        <Card>\n                            <Card.Img variant=\"top\" src={item.poster_path} />\n                            <Card.Body>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Text>\n                                    <p>{item.release_date}</p>\n                                    <p>{item.overview}</p>\n                                </Card.Text>\n                                <Button variant=\"primary\" onClick={handleShow}>Add to Favorites List</Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n            <ModalMovie showFlag={show} handleClose={handleClose} movieData={clicked}/>\n        </>\n    )\n}\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
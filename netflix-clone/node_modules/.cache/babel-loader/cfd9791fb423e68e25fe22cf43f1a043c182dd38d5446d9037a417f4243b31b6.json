{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/ModalMovie.js\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\n//import React, { useState } from 'react';\n//import axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalMovie(props) {\n  _s();\n  const {\n    showFlag,\n    handleClose,\n    movieData\n  } = props;\n  const [Opinion, setOpinion] = useState('');\n  const handleSubmit = async () => {\n    try {\n      const serverUrl = `https://onlineserver-w9zu.onrender.com/getMovies`;\n      const data = {\n        id: movieData.id,\n        title: movieData.title,\n        release_date: movieData.release_date,\n        poster_path: movieData.poster_path,\n        overview: movieData.overview\n        // Opinion:Opinion\n      };\n\n      console.log(\"sssssss\");\n      axios.post(serverUrl, data).then(res => {\n        console.log(res);\n      });\n      handleClose();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.showFlag,\n      onHide: props.handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: props.movieData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: `https://image.tmdb.org/t/p/original${props.movieData.poster_path}`,\n          rounded: true,\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Add it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ModalMovie, \"60pjSpWK1i7jcPd9HMxSV/rc2HY=\");\n_c = ModalMovie;\nexport default ModalMovie;\nvar _c;\n$RefreshReg$(_c, \"ModalMovie\");","map":{"version":3,"names":["Button","Modal","Image","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalMovie","props","_s","showFlag","handleClose","movieData","Opinion","setOpinion","useState","handleSubmit","serverUrl","data","id","title","release_date","poster_path","overview","console","log","axios","post","then","res","error","children","show","onHide","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","src","rounded","width","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/ModalMovie.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\n//import React, { useState } from 'react';\n//import axios from 'axios';\n\n\nfunction ModalMovie(props) {\n     const { showFlag, handleClose, movieData } = props;\n    const [Opinion, setOpinion] = useState('');\n    const handleSubmit = async () => {\n        try {\n\n            const serverUrl = `https://onlineserver-w9zu.onrender.com/getMovies`;\n            const data = {\n                id: movieData.id,\n                title: movieData.title,\n                release_date: movieData.release_date,\n                poster_path: movieData.poster_path,\n                overview:movieData.overview\n               // Opinion:Opinion\n\n            };\n            console.log(\"sssssss\");\n            axios.post(serverUrl, data).then((res)=>{\nconsole.log(res);\n            });\n\n            handleClose();\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n \n    return (\n        <>\n            <Modal show={props.showFlag} onHide={props.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.movieData.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Image src={`https://image.tmdb.org/t/p/original${props.movieData.poster_path}`} rounded width='100%' />\n                    {/* <div>\n                        <label htmlFor='op'> Write Your Opinion </label>\n                        <br></br>\n                        <input placeholder='write opinion' type=\"text\" value={Opinion} size='50' onChange={(event) => setOpinion(event.target.value)} />\n                    </div> */}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSubmit }>\n                        Add it\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default ModalMovie;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
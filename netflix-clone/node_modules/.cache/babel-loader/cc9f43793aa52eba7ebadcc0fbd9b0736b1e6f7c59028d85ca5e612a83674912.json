{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/ModalMovie.js\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalMovie(props) {\n  _s();\n  const [handleFav, setHandleFav] = useState({});\n  const movieData = {\n    title: 'The Godfather',\n    director: 'Francis Ford Coppola',\n    year: 1972\n  };\n\n  // Send the movie data to the server using the fetch API\n  fetch('/addMovie', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(movieData)\n  }).then(response => {\n    if (response.ok) {\n      // The movie was successfully added to the database\n    } else {\n      // There was an error adding the movie to the database\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.showFlag,\n      onHide: props.handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: props.movieData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: `https://image.tmdb.org/t/p/original${props.movieData.poster_path}`,\n          rounded: true,\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"op\",\n            children: \" Write Your Opinion \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"write opinion\",\n            type: \"text\",\n            id: \"op\",\n            size: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: props.handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            handleFav;\n          },\n          children: \"Add it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ModalMovie, \"V1eHxE29GEYV00QWrfNpNEXqlIU=\");\n_c = ModalMovie;\nexport default ModalMovie;\nvar _c;\n$RefreshReg$(_c, \"ModalMovie\");","map":{"version":3,"names":["Button","Modal","Image","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalMovie","props","_s","handleFav","setHandleFav","useState","movieData","title","director","year","fetch","method","headers","body","JSON","stringify","then","response","ok","children","show","showFlag","onHide","handleClose","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","src","poster_path","rounded","width","htmlFor","placeholder","type","id","size","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/ModalMovie.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\n\nfunction ModalMovie(props) {\n    const [handleFav,setHandleFav]=useState({});\n    const movieData = {\n  title: 'The Godfather',\n  director: 'Francis Ford Coppola',\n  year: 1972\n};\n\n// Send the movie data to the server using the fetch API\nfetch('/addMovie', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(movieData)\n})\n.then(response => {\n  if (response.ok) {\n    // The movie was successfully added to the database\n  } else {\n    // There was an error adding the movie to the database\n  }\n})\n\n\n    return (\n        <>\n            <Modal show={props.showFlag} onHide={props.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.movieData.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Image src={`https://image.tmdb.org/t/p/original${props.movieData.poster_path}`} rounded width='100%'/>\n                <div>\n                <label htmlFor='op'> Write Your Opinion </label>\n                <br></br>\n                <input placeholder='write opinion' type=\"text\" id=\"op\" size='50'/>\n                </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={()=>{handleFav}}>\n                        Add it\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default ModalMovie;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAMC,SAAS,GAAG;IACpBC,KAAK,EAAE,eAAe;IACtBC,QAAQ,EAAE,sBAAsB;IAChCC,IAAI,EAAE;EACR,CAAC;;EAED;EACAC,KAAK,CAAC,WAAW,EAAE;IACjBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,SAAS;EAChC,CAAC,CAAC,CACDU,IAAI,CAACC,QAAQ,IAAI;IAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACf;IAAA,CACD,MAAM;MACL;IAAA;EAEJ,CAAC,CAAC;EAGE,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACItB,OAAA,CAACH,KAAK;MAAC0B,IAAI,EAAEnB,KAAK,CAACoB,QAAS;MAACC,MAAM,EAAErB,KAAK,CAACsB,WAAY;MAAAJ,QAAA,gBACnDtB,OAAA,CAACH,KAAK,CAAC8B,MAAM;QAACC,WAAW;QAAAN,QAAA,eACrBtB,OAAA,CAACH,KAAK,CAACgC,KAAK;UAAAP,QAAA,EAAElB,KAAK,CAACK,SAAS,CAACC;QAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACfjC,OAAA,CAACH,KAAK,CAACqC,IAAI;QAAAZ,QAAA,gBACPtB,OAAA,CAACF,KAAK;UAACqC,GAAG,EAAG,sCAAqC/B,KAAK,CAACK,SAAS,CAAC2B,WAAY,EAAE;UAACC,OAAO;UAACC,KAAK,EAAC;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC3GjC,OAAA;UAAAsB,QAAA,gBACAtB,OAAA;YAAOuC,OAAO,EAAC,IAAI;YAAAjB,QAAA,EAAC;UAAoB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChDjC,OAAA;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTjC,OAAA;YAAOwC,WAAW,EAAC,eAAe;YAACC,IAAI,EAAC,MAAM;YAACC,EAAE,EAAC,IAAI;YAACC,IAAI,EAAC;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eACbjC,OAAA,CAACH,KAAK,CAAC+C,MAAM;QAAAtB,QAAA,gBACTtB,OAAA,CAACJ,MAAM;UAACiD,OAAO,EAAC,WAAW;UAACC,OAAO,EAAE1C,KAAK,CAACsB,WAAY;UAAAJ,QAAA,EAAC;QAExD;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjC,OAAA,CAACJ,MAAM;UAACiD,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEA,CAAA,KAAI;YAACxC,SAAS;UAAA,CAAE;UAAAgB,QAAA,EAAC;QAEpD;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBACV,CAAC;AAEX;AAAC5B,EAAA,CAlDQF,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AAoDnB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
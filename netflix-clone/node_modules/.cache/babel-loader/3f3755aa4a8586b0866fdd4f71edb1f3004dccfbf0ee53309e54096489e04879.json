{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/Movie.js\",\n  _s = $RefreshSig$();\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from \"react-bootstrap/Button\";\nimport ModalMovie from './ModalMovie';\nimport { useState } from 'react';\nimport UpdateModal from './UpdateModal';\nimport DeleteModal from './DeleteModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Movie(props) {\n  _s();\n  const [show, setShow] = useState(false);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  const [clickedMovie, setClickedMovie] = useState({});\n  const handleShow = item => {\n    setShow(true);\n    setClickedMovie(item);\n  };\n  const handleClose = () => {\n    setShow(false);\n    setShowUpdate(false);\n    setShowDelete(false);\n  };\n  const handleupdate = item => {\n    setShowUpdate(true);\n    setClickedMovie(item);\n  };\n  const hadleDelete = item => {\n    setShowDelete(true);\n    setClickedMovie(item);\n  };\n  const takeNewArrFromChild = arr => {\n    props.takeNewArr(arr);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: props.favData.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://image.tmdb.org/t/p/original${item.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => {\n                handleShow(item);\n              },\n              children: \"Add \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => {\n                handleupdate(item);\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => {\n                hadleDelete(item);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalMovie, {\n      showFlag: show,\n      handleClose: handleClose,\n      movieData: clickedMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdateModal, {\n      showFlag: showUpdate,\n      handleClose: handleClose,\n      movieData: clickedMovie,\n      takeNewArrFromChild: takeNewArrFromChild\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeleteModal, {\n      showFlag: showDelete,\n      handleClose: handleClose,\n      movieData: clickedMovie,\n      takeNewArrFromChild: takeNewArrFromChild\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Movie, \"10WnrQ2cxF7oEx4SzW/SINYMKYM=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["Card","Col","Row","Button","ModalMovie","useState","UpdateModal","DeleteModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Movie","props","_s","show","setShow","showUpdate","setShowUpdate","showDelete","setShowDelete","clickedMovie","setClickedMovie","handleShow","item","handleClose","handleupdate","hadleDelete","takeNewArrFromChild","arr","takeNewArr","children","xs","md","className","favData","map","idx","Img","variant","src","poster_path","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","title","Text","release_date","overview","onClick","showFlag","movieData","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/Movie.js"],"sourcesContent":["import Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from \"react-bootstrap/Button\";\nimport ModalMovie from './ModalMovie';\n\nimport { useState } from 'react';\nimport UpdateModal from './UpdateModal';\nimport DeleteModal from './DeleteModal';\nfunction Movie(props) {\n    const [show, setShow] = useState(false);\n    const [showUpdate, setShowUpdate] = useState(false);\n    const [showDelete, setShowDelete] = useState(false);\n    const [clickedMovie,setClickedMovie]=useState({});\n    const handleShow = (item) => {\n        \n        setShow(true);\n        setClickedMovie(item);\n    }\n    const handleClose=()=>{\n        setShow(false);\n        setShowUpdate(false);\n        setShowDelete(false);\n    }\n    const handleupdate = (item) => {\n        \n        setShowUpdate(true);\n        setClickedMovie(item);\n    }\n    const hadleDelete = (item) => {\n        \n        setShowDelete(true);\n        setClickedMovie(item);\n    }\n    const takeNewArrFromChild = (arr) => {\n        props.takeNewArr(arr);\n    }\n    return (\n        <>\n            <Row xs={1} md={4} className=\"g-4\">\n                {props.favData.map((item, idx) => (\n                    <Col key={idx}>\n                        <Card>\n                            \n                            <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/original${item.poster_path}`} />\n                            <Card.Body>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Text>\n                                    <p>{item.release_date}</p>\n                                    <p>{item.overview}</p>\n                                </Card.Text>\n                                <Button variant=\"primary\" onClick={()=>{handleShow(item)}}>Add </Button>\n                                <Button variant=\"success\" onClick={() => { handleupdate(item) }}>Update</Button>\n                                <Button variant=\"danger\" onClick={() => { hadleDelete(item) }}>Delete</Button>\n\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n            <ModalMovie showFlag={show} handleClose={handleClose} movieData={clickedMovie}/>\n            <UpdateModal showFlag={showUpdate} handleClose={handleClose} movieData={clickedMovie} takeNewArrFromChild={takeNewArrFromChild}/>\n            <DeleteModal showFlag={showDelete} handleClose={handleClose} movieData={clickedMovie} takeNewArrFromChild={takeNewArrFromChild}/>\n\n        </>\n    )\n}\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
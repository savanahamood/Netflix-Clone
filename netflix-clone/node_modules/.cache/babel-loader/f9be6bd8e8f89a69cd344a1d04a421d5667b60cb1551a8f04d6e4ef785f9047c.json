{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/MovieList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieList(props) {\n  _s();\n  const [movList, setmoList] = useState([]);\n  const sendReq = async () => {\n    const serverUrl = `https://onlineserver-w9zu.onrender.com/trending`;\n    const result = await axios.get(serverUrl);\n    setmoList(result.data);\n  };\n  const handleSubmit = async movieData => {\n    movieData.preventDefault();\n    const serverUrl = `https://onlineserver-w9zu.onrender.com/getMovies`;\n    const data = {\n      id: movieData.target.id.value,\n      title: movieData.target.title.value,\n      release_date: movieData.target.release_date.value,\n      poster_path: movieData.target.poster_path.value,\n      overview: movieData.target.overview.value\n    };\n    console.log(\"sssssss\");\n    const axiosRes = await axios.post(serverUrl, data);\n    props.handleClose();\n  };\n  useEffect(() => {\n    sendReq();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: movList.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://image.tmdb.org/t/p/original${item.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => {\n                handleSubmit(item);\n              },\n              children: \"Add \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MovieList, \"V33nU9nCkI7JhZoQ+j1NPlJSmEE=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useEffect","useState","axios","Card","Col","Row","Button","Movie","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","props","_s","movList","setmoList","sendReq","serverUrl","result","get","data","handleSubmit","movieData","preventDefault","id","target","value","title","release_date","poster_path","overview","console","log","axiosRes","post","handleClose","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","className","map","item","idx","Img","variant","src","Body","Title","Text","onClick","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/MovieList.js"],"sourcesContent":["import {useEffect,useState} from \"react\";\nimport axios from \"axios\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Movie from \"./Movie\"\n\nfunction MovieList(props){\n    const [movList, setmoList] = useState([]);\n    const sendReq = async () => {\n        const serverUrl = `https://onlineserver-w9zu.onrender.com/trending`;\n        const result = await axios.get(serverUrl);\n        setmoList(result.data);\n\n    }\n    \n    const handleSubmit = async (movieData) => {\n        movieData.preventDefault();\n    \n\n            const serverUrl = `https://onlineserver-w9zu.onrender.com/getMovies`;\n            const data = {\n                id: movieData.target.id.value,\n                title: movieData.target.title.value,\n                release_date: movieData.target.release_date.value,\n                poster_path: movieData.target.poster_path.value,\n                overview:movieData.target.overview.value\n\n            };\n            console.log(\"sssssss\");\n            const axiosRes = await axios.post(serverUrl, data);\n\n\n            props.handleClose();};\n    \n    useEffect(() => {\n        sendReq();\n    },[]);\n    return(\n    <>\n    <h1>Home</h1>\n            {/* <button onClick={sendReq} >send req</button> */}\n            <Row xs={1} md={4} className=\"g-4\">\n                {movList.map((item, idx) => (\n                    <Col key={idx}>\n                        <Card>\n                            <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/original${item.poster_path}`} />\n                            <Card.Body>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Text>\n                                    <p>{item.release_date}</p>\n                                    <p>{item.overview}</p>\n                                </Card.Text>\n                                <Button variant=\"primary\" onClick={()=>{handleSubmit(item)}}>Add </Button>\n                               {/*  <Button variant=\"success\" onClick={() => { props.handleupdate(item) }}>Update</Button>\n                                <Button variant=\"danger\" onClick={() => { props.hadleDelete(item) }}>Delete</Button> */}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n    </>\n    )\n}\nexport default MovieList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
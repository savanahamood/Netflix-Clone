{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/MovieList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieList(props) {\n  _s();\n  const [movList, setmoList] = useState([]);\n  const [show, setShow] = useState(false);\n  const sendReq = async () => {\n    const serverUrl = `${process.env.REACT_APP_SERVER_URL}/trending`;\n    const result = await axios.get(serverUrl);\n    console.log(result.data);\n    setmoList(result.data);\n  };\n  const handleSubmit = async movieData => {\n    /*   movieData.preventDefault(); */\n\n    const serverUrl = `${process.env.REACT_APP_SERVER_URL}/getMovies`;\n    const data = {\n      id: movieData.id,\n      title: movieData.title,\n      release_date: movieData.release_date,\n      poster_path: movieData.poster_path,\n      overview: movieData.overview\n    };\n    console.log(data);\n    const axiosRes = await axios.post(serverUrl, data);\n    console.log(axiosRes);\n  };\n  const handleShow = item => {\n    setShow(true);\n    setClickedMovie(item);\n  };\n  const handleClose = () => {\n    setShow(false);\n  };\n  const hadleDelete = item => {\n    setShowDelete(true);\n    setClickedMovie(item);\n  };\n  const takeNewArrFromChild = arr => {\n    props.takeNewArr(arr);\n  };\n  useEffect(() => {\n    sendReq();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: movList.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://image.tmdb.org/t/p/original${item.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => {\n                handleSubmit(item);\n              },\n              children: \"Add to Favarites List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalM, {\n      showFlag: show,\n      handleClose: handleClose,\n      movieData: clickedMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MovieList, \"VO/4iI3hUzaGvLDtzxXh2vZhOVo=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useEffect","useState","axios","Card","Col","Row","Button","Movie","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","props","_s","movList","setmoList","show","setShow","sendReq","serverUrl","process","env","REACT_APP_SERVER_URL","result","get","console","log","data","handleSubmit","movieData","id","title","release_date","poster_path","overview","axiosRes","post","handleShow","item","setClickedMovie","handleClose","hadleDelete","setShowDelete","takeNewArrFromChild","arr","takeNewArr","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","className","map","idx","Img","variant","src","Body","Title","Text","onClick","ModalM","showFlag","clickedMovie","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/MovieList.js"],"sourcesContent":["import {useEffect,useState} from \"react\";\nimport axios from \"axios\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Movie from \"./Movie\"\n\nfunction MovieList(props){\n    const [movList, setmoList] = useState([]);\n    const [show, setShow] = useState(false);\n    const sendReq = async () => {\n        const serverUrl = `${process.env.REACT_APP_SERVER_URL}/trending`;\n        \n        const result = await axios.get(serverUrl);\n        console.log(result.data);\n        setmoList(result.data);\n\n    }\n    \n    const handleSubmit = async (movieData) => {\n      /*   movieData.preventDefault(); */\n    \n\n            const serverUrl = `${process.env.REACT_APP_SERVER_URL}/getMovies`;\n            const data = {\n                id: movieData.id,\n                title: movieData.title,\n                release_date: movieData.release_date,\n                poster_path: movieData.poster_path,\n                overview:movieData.overview\n            };\n            console.log(data);\n            const axiosRes = await axios.post(serverUrl, data);\nconsole.log(axiosRes)\n\n            };\n            const handleShow = (item) => {\n        \n                setShow(true);\n                setClickedMovie(item);\n            }\n            const handleClose=()=>{\n                setShow(false);\n            }\n            \n            const hadleDelete = (item) => {\n                \n                setShowDelete(true);\n                setClickedMovie(item);\n            }\n            const takeNewArrFromChild = (arr) => {\n                props.takeNewArr(arr);\n            }\n    \n    useEffect(() => {\n        sendReq();\n    },[]);\n    return(\n    <>\n    <h1>Home</h1>\n            {/* <button onClick={sendReq} >send req</button> */}\n            <Row xs={1} md={4} className=\"g-4\">\n                {movList.map((item, idx) => (\n                    <Col key={idx}>\n                        <Card>\n                            <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/original${item.poster_path}`} />\n                            <Card.Body>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Text>\n                                    <p>{item.release_date}</p>\n                                    <p>{item.overview}</p>\n                                </Card.Text>\n                                <Button variant=\"primary\" onClick={()=>{handleSubmit(item)}}>Add to Favarites List</Button>\n                               {/*  <Button variant=\"success\" onClick={() => { props.handleupdate(item) }}>Update</Button>\n                                <Button variant=\"danger\" onClick={() => { props.hadleDelete(item) }}>Delete</Button> */}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n            <ModalM showFlag={show} handleClose={handleClose} movieData={clickedMovie}/>\n    </>\n    )\n}\nexport default MovieList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
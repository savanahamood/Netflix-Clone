{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/DeleteModal.js\";\n/* import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup'; */\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DeleteModal(props) {\n  const handleSubmit = async movieData => {\n    movieData.preventDefault();\n    const serverUrl = `${process.env.REACT_APP_SERVER_URL}/getMovies/${props.movieData.id}`;\n    /* const data = {\n        id: movieData.target.id.value,\n        title: movieData.target.title.value,\n        release_date: movieData.target.release_date.value,\n        poster_path: movieData.target.poster_path.value,\n        overview:movieData.target.overview.value\n     }; */\n    console.log(\"sssssss\");\n    const axiosRes = await axios.delete(serverUrl);\n    props.handleClose();\n    // props.takeNewArrFromDeleteChild(axiosRes.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.showFlag,\n      onHide: props.handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: props.movieData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: `https://image.tmdb.org/t/p/original${props.movieData.poster_path}`,\n          rounded: true,\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: props.handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Delete it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_c = DeleteModal;\nexport default DeleteModal;\nvar _c;\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"names":["Button","Modal","Image","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DeleteModal","props","handleSubmit","movieData","preventDefault","serverUrl","process","env","REACT_APP_SERVER_URL","id","console","log","axiosRes","delete","handleClose","children","show","showFlag","onHide","Header","closeButton","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","Body","src","poster_path","rounded","width","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/DeleteModal.js"],"sourcesContent":["/* import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup'; */\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\nimport axios from 'axios';\n\nfunction DeleteModal(props){\n    \n    const handleSubmit = async (movieData) => {\n        movieData.preventDefault();\n    \n\n            const serverUrl = `${process.env.REACT_APP_SERVER_URL}/getMovies/${props.movieData.id}`;\n            /* const data = {\n                id: movieData.target.id.value,\n                title: movieData.target.title.value,\n                release_date: movieData.target.release_date.value,\n                poster_path: movieData.target.poster_path.value,\n                overview:movieData.target.overview.value\n\n            }; */\n            console.log(\"sssssss\");\n            const axiosRes = await axios.delete(serverUrl);\n\n\n            props.handleClose();\n           // props.takeNewArrFromDeleteChild(axiosRes.data);\n\n            \n        \n    };\n\n    return(\n        <>\n\n<Modal show={props.showFlag} onHide={props.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.movieData.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Image src={`https://image.tmdb.org/t/p/original${props.movieData.poster_path}`} rounded width='100%' />\n                    {/* <div>\n                        <label htmlFor='op'> Write Your Opinion </label>\n                        <br></br>\n                        <input placeholder='write opinion' type=\"text\" value={Opinion} size='50' onChange={(event) => setOpinion(event.target.value)} />\n                    </div> */}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSubmit }>\n                        Delete it\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        \n       {/*  <Modal show={props.showFlag} onHide={props.handleclose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Form</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group>\n                            <Form.Label>Movie ID</Form.Label>\n                            <Form.Control\n                                name=\"id\"\n                                type=\"text\"\n                                defaultValue={props.movieData.id}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Movie Title</Form.Label>\n                            <Form.Control\n                                name=\"title\"\n                                type=\"text\"\n                                defaultValue={props.movieData.title}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Movie Date</Form.Label>\n                            <InputGroup hasValidation>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"release_date\"\n                                    defaultValue={props.movieData.release_date}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Movie Image</Form.Label>\n                            <InputGroup hasValidation>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"poster_path\"\n                                    defaultValue={props.movieData.poster_path}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Movie overview</Form.Label>\n                            <InputGroup hasValidation>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"overview\"\n                                    defaultValue={props.movieData.overview}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        <Button type=\"submit\">Submit form</Button>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.handleclose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal> */}\n        \n        \n        </>\n    )\n    \n}\nexport default DeleteModal"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,WAAWA,CAACC,KAAK,EAAC;EAEvB,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;IACtCA,SAAS,CAACC,cAAc,CAAC,CAAC;IAGtB,MAAMC,SAAS,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,cAAaP,KAAK,CAACE,SAAS,CAACM,EAAG,EAAC;IACvF;AACZ;AACA;AACA;AACA;AACA;AACA;IAEYC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,MAAM,CAACR,SAAS,CAAC;IAG9CJ,KAAK,CAACa,WAAW,CAAC,CAAC;IACpB;EAIP,CAAC;;EAED,oBACIjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eAERlB,OAAA,CAACJ,KAAK;MAACuB,IAAI,EAAEf,KAAK,CAACgB,QAAS;MAACC,MAAM,EAAEjB,KAAK,CAACa,WAAY;MAAAC,QAAA,gBACvClB,OAAA,CAACJ,KAAK,CAAC0B,MAAM;QAACC,WAAW;QAAAL,QAAA,eACrBlB,OAAA,CAACJ,KAAK,CAAC4B,KAAK;UAAAN,QAAA,EAAEd,KAAK,CAACE,SAAS,CAACmB;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACf7B,OAAA,CAACJ,KAAK,CAACkC,IAAI;QAAAZ,QAAA,eACPlB,OAAA,CAACH,KAAK;UAACkC,GAAG,EAAG,sCAAqC3B,KAAK,CAACE,SAAS,CAAC0B,WAAY,EAAE;UAACC,OAAO;UAACC,KAAK,EAAC;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMhG,CAAC,eACb7B,OAAA,CAACJ,KAAK,CAACuC,MAAM;QAAAjB,QAAA,gBACTlB,OAAA,CAACL,MAAM;UAACyC,OAAO,EAAC,WAAW;UAACC,OAAO,EAAEjC,KAAK,CAACa,WAAY;UAAAC,QAAA,EAAC;QAExD;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7B,OAAA,CAACL,MAAM;UAACyC,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEhC,YAAc;UAAAa,QAAA,EAAC;QAElD;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBAiEV,CAAC;AAGX;AAACS,EAAA,GArHQnC,WAAW;AAsHpB,eAAeA,WAAW;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
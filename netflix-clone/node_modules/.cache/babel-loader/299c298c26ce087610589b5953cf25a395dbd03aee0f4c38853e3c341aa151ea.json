{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/Movie.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Movie(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: moviesData.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: item.poster_path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Add to Favorites List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["Movie","props","_jsxDEV","_Fragment","children","Row","xs","md","className","moviesData","map","item","idx","Col","Card","Img","variant","src","poster_path","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","title","Text","release_date","overview","Button","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/Movie.js"],"sourcesContent":["\nfunction Movie(props){\nreturn (\n    <>\n    <Row xs={1} md={4} className=\"g-4\">\n                {moviesData.map((item, idx) => (\n                    <Col key={idx}>\n                        <Card>\n                            <Card.Img variant=\"top\" src={item.poster_path} />\n                            <Card.Body>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Text>\n                                    <p>{item.release_date}</p>\n                                    <p>{item.overview}</p>\n                                </Card.Text>\n                                <Button variant=\"primary\">Add to Favorites List</Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n    </>\n)\n}\nexport default Movie;"],"mappings":";;;AACA,SAASA,KAAKA,CAACC,KAAK,EAAC;EACrB,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACAF,OAAA,CAACG,GAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,SAAS,EAAC,KAAK;MAAAJ,QAAA,EACrBK,UAAU,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACtBV,OAAA,CAACW,GAAG;QAAAT,QAAA,eACAF,OAAA,CAACY,IAAI;UAAAV,QAAA,gBACDF,OAAA,CAACY,IAAI,CAACC,GAAG;YAACC,OAAO,EAAC,KAAK;YAACC,GAAG,EAAEN,IAAI,CAACO;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjDpB,OAAA,CAACY,IAAI,CAACS,IAAI;YAAAnB,QAAA,gBACNF,OAAA,CAACY,IAAI,CAACU,KAAK;cAAApB,QAAA,EAAEO,IAAI,CAACc;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACrCpB,OAAA,CAACY,IAAI,CAACY,IAAI;cAAAtB,QAAA,gBACNF,OAAA;gBAAAE,QAAA,EAAIO,IAAI,CAACgB;cAAY;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1BpB,OAAA;gBAAAE,QAAA,EAAIO,IAAI,CAACiB;cAAQ;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC,eACZpB,OAAA,CAAC2B,MAAM;cAACb,OAAO,EAAC,SAAS;cAAAZ,QAAA,EAAC;YAAqB;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAXDV,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYR,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACZ,CAAC;AAEP;AAACQ,EAAA,GAtBQ9B,KAAK;AAuBd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
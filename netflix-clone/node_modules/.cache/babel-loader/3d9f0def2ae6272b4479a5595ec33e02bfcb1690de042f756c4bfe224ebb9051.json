{"ast":null,"code":"var _jsxFileName = \"/home/savana/Netflix-Clone/netflix-clone/src/components/MovieList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  const [movList, setmoList] = useState([]);\n  const sendReq = async () => {\n    const serverUrl = `https://onlineserver-w9zu.onrender.com/trending`;\n    const result = await axios.get(serverUrl);\n    setmoList(result.data);\n  };\n  useEffect(() => {\n    sendReq();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: movList.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://image.tmdb.org/t/p/original${item.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.topText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.tags\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Go somewhere\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MovieList, \"V33nU9nCkI7JhZoQ+j1NPlJSmEE=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useEffect","useState","axios","Movie","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","_s","movList","setmoList","sendReq","serverUrl","result","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","Row","xs","md","className","map","item","idx","Col","Card","Img","variant","src","poster_path","Body","Title","title","Text","topText","tags","Button","_c","$RefreshReg$"],"sources":["/home/savana/Netflix-Clone/netflix-clone/src/components/MovieList.js"],"sourcesContent":["import {useEffect,useState} from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\"\nfunction MovieList(){\n    const [movList, setmoList] = useState([]);\n    const sendReq = async () => {\n        const serverUrl = `https://onlineserver-w9zu.onrender.com/trending`;\n        const result = await axios.get(serverUrl);\n        setmoList(result.data);\n\n    }\n    \n    useEffect(() => {\n        sendReq();\n    },[]);\n    return(\n    <>\n    <h1>Home</h1>\n            {/* <button onClick={sendReq} >send req</button> */}\n            <Row xs={1} md={4} className=\"g-4\">\n                {movList.map((item, idx) => (\n                    <Col key={idx}>\n                        <Card>\n                            <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/original${item.poster_path}`} />\n                            <Card.Body>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Text>\n                                    <p>{item.topText}</p>\n                                    <p>{item.tags}</p>\n                                </Card.Text>\n                                <Button variant=\"primary\">Go somewhere</Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n    </>\n    )\n}\nexport default MovieList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}